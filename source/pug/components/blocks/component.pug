mixin component(props = {})
  - const {component, description, base, modifiers, examples} = props;
  -
    const _params = {
      card: {
        code: {
          modifiers: ["filled", "form-round-m", "space-xl"]
        }
      },
      header: {
        title: {
          tag: "h1",
          text: component.name,
          modifiers: ["size-3xl"]
        },
        subtitle: {
          text: component.localName,
          modifiers: ["size-2xl"]
        },
        iconBtn: {
          href: component.git,
          ariaLabel: `Open ${component.name} component in git`,
          icon: {
            name: "git",
            width: 32,
            height: 32,
          },
          modifiers: ["form-round", "elevated-shadow-1"]
        }
      },
      description: {
        title: {
          tag: "h2",
          text: "Использование",
          modifiers: ["size-2xl"]
        },
        text: {
          tag: "p",
          content: description
        }
      },
      base: {
        title: {
          tag: "h2",
          text: "Базовый компонент",
          modifiers: ["size-2xl"]
        }
      },
      modifiers: {
        title: {
          tag: "h2",
          text: "Модификаторы",
          modifiers: ["size-2xl"]
        },
        note: {
          content: ["Если для&nbsp;проекта не&nbsp;предусмотрены токены, используй жёстко закодированные значения"],
          modifiers: ["size-l"]
        },
        example: {
          note: {
            tag: "p"
          }
        }
      },
      examples: {
        title: {
          tag: "h2",
          text: "Примеры",
          modifiers: ["size-2xl"]
        },
        note: {
          tag: "p",
          content: examples?.note,
          modifiers: ["size-l"]
        },
        snippet: {
          title: {
            tag: "h3",
            text: "Пример",
            modifiers: ["size-xl"]
          }
        }
      },
    }


  .component&attributes(attributes)

    .component__header
      .component__titles
        +title(_params.header.title).component__name
        +title(_params.header.subtitle).component__name--local
      +icon-btn(_params.header.iconBtn).component__icon-btn

    .component__description
      +title(_params.description.title)
      +text(_params.description.text).component__text

    if examples
      .component__calls
        +title(_params.examples.title)
        +card(_params.card.code).component__card
          +grid({modifiers: ["cols-2", "gap-l"]}).component__examples
            if examples.note
              +text(_params.examples.note)

            each snippet in examples.snippets
              +card({modifiers: ["filled-stripe", "form-round-m", "space-l"]}).component__call
                +title(Object.assign(_params.examples.snippet.title, snippet.title))
                if snippet.note
                  +text({
                    tag: snippet.note.tag || "span",
                    content: snippet.note.content
                  }).component__text
                .component__view
                  +#{component.mixin}(snippet.props)
                    if snippet.block
                      +#{snippet.block.mixin}(snippet.block.props)
                +details({summary: "Показать код"}).component__details
                  pre
                    code.
                      #{snippet.code}

    .component__base
      +title(_params.base.title)

      +card(_params.card.code).component__card
        each snippet, index in base
          +details({summary: index === 0 ? "Показать шаблон" : "Показать стили"})
            pre
              code.
                #{snippet}

    if modifiers
      .component__modifiers
        +title(_params.modifiers.title)
        +card(_params.card.code).component__card
          +text(_params.modifiers.note).component__text
          pre
            code.
              .#{component.mixin} {
                ...

          .component__inner-code
            each snippet in modifiers
              +details({
                summary: snippet.summary,
                modifiers: snippet.modifiers
              })
                if snippet.note
                  +text({
                    tag: snippet.note.tag || "span",
                    content: snippet.note.content
                  }).component__text

                if snippet.examples
                  +grid({modifiers: ["cols-2", "gap-l"]}).component__examples
                    each example in snippet.examples
                      +card({modifiers: ["filled-stripe", "form-round-m", "space-m"]}).component__example
                        if example.title
                          +title(example.title)
                        .component__view
                          +#{component.mixin}(example.props)
                            if example.block
                              +#{example.block.mixin}(example.block.props)
                        if example.note
                          +text(Object.assign(_params.modifiers.example.note, example.note)).component__text
                        +details({
                          summary: "Показать код"
                        }).component__details
                          pre
                            code.
                              #{example.code}

                .component__code
                  pre
                    code.
                      #{snippet.code}

          pre
            code }

    block
